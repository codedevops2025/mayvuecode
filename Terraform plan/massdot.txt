
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.s3-backend.aws_dynamodb_table.tf-state-lock will be created
  + resource "aws_dynamodb_table" "tf-state-lock" {
      + arn              = (known after apply)
      + billing_mode     = "PROVISIONED"
      + hash_key         = "LockID"
      + id               = (known after apply)
      + name             = "dev-brmapp-brm7-tf-state-lock"
      + read_capacity    = 20
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags             = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + tags_all         = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + write_capacity   = 20

      + attribute {
          + name = "LockID"
          + type = "S"
        }

      + point_in_time_recovery (known after apply)

      + server_side_encryption (known after apply)

      + ttl (known after apply)
    }

  # module.s3-backend.aws_iam_policy.replication will be created
  + resource "aws_iam_policy" "replication" {
      + arn              = (known after apply)
      + attachment_count = (known after apply)
      + id               = (known after apply)
      + name             = "dev-brmapp-brm7-s3-replication-policy"
      + name_prefix      = (known after apply)
      + path             = "/"
      + policy           = (known after apply)
      + policy_id        = (known after apply)
      + tags_all         = (known after apply)
    }

  # module.s3-backend.aws_iam_policy_attachment.replication will be created
  + resource "aws_iam_policy_attachment" "replication" {
      + id         = (known after apply)
      + name       = "dev-brmapp-brm7-s3-replication-policy-attachment"
      + policy_arn = (known after apply)
      + roles      = [
          + "dev-brmapp-brm7-s3-replication-role",
        ]
    }

  # module.s3-backend.aws_iam_role.replication will be created
  + resource "aws_iam_role" "replication" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "s3.amazonaws.com"
                        }
                      + Sid       = ""
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "dev-brmapp-brm7-s3-replication-role"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags                  = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + tags_all              = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.s3-backend.aws_s3_bucket.backup will be created
  + resource "aws_s3_bucket" "backup" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "dev-brmapp-brm7-tf-state-backup"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + tags_all                    = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # module.s3-backend.aws_s3_bucket.state will be created
  + resource "aws_s3_bucket" "state" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "dev-brmapp-brm7-tf-state"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + tags_all                    = {
          + "cloud_provider"  = "aws"
          + "confidentiality" = "internal"
          + "create_by"       = "Terraform"
          + "environment"     = "dev"
          + "owner"           = "Mayvue Solutions"
          + "project"         = "brmapp"
          + "team"            = "DevOps"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # module.s3-backend.aws_s3_bucket_replication_configuration.state will be created
  + resource "aws_s3_bucket_replication_configuration" "state" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + role   = (known after apply)

      + rule {
          + id     = "StateReplicationAll"
          + status = "Enabled"

          + destination {
              + bucket        = (known after apply)
              + storage_class = "STANDARD"
            }
        }
    }

  # module.s3-backend.aws_s3_bucket_versioning.backup will be created
  + resource "aws_s3_bucket_versioning" "backup" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + versioning_configuration {
          + mfa_delete = (known after apply)
          + status     = "Enabled"
        }
    }

  # module.s3-backend.aws_s3_bucket_versioning.main will be created
  + resource "aws_s3_bucket_versioning" "main" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + versioning_configuration {
          + mfa_delete = (known after apply)
          + status     = "Enabled"
        }
    }

Plan: 9 to add, 0 to change, 0 to destroy.
