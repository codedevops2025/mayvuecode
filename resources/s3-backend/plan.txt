
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.s3-backend.aws_dynamodb_table.tf-state-lock[0m will be created
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "tf-state-lock" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m billing_mode     = "PROVISIONED"
      [32m+[0m[0m hash_key         = "LockID"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "dev-brmapp-brm7-tf-state-lock"
      [32m+[0m[0m read_capacity    = 20
      [32m+[0m[0m stream_arn       = (known after apply)
      [32m+[0m[0m stream_label     = (known after apply)
      [32m+[0m[0m stream_view_type = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m write_capacity   = 20

      [32m+[0m[0m attribute {
          [32m+[0m[0m name = "LockID"
          [32m+[0m[0m type = "S"
        }

      [32m+[0m[0m point_in_time_recovery (known after apply)

      [32m+[0m[0m server_side_encryption (known after apply)

      [32m+[0m[0m ttl (known after apply)
    }

[1m  # module.s3-backend.aws_iam_policy.replication[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "replication" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m attachment_count = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = "dev-brmapp-brm7-s3-replication-policy"
      [32m+[0m[0m name_prefix      = (known after apply)
      [32m+[0m[0m path             = "/"
      [32m+[0m[0m policy           = (known after apply)
      [32m+[0m[0m policy_id        = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
    }

[1m  # module.s3-backend.aws_iam_policy_attachment.replication[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy_attachment" "replication" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m name       = "dev-brmapp-brm7-s3-replication-policy-attachment"
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m roles      = [
          [32m+[0m[0m "dev-brmapp-brm7-s3-replication-role",
        ]
    }

[1m  # module.s3-backend.aws_iam_role.replication[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "replication" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "s3.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = ""
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "dev-brmapp-brm7-s3-replication-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.s3-backend.aws_s3_bucket.backup[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "backup" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "dev-brmapp-brm7-tf-state-backup"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3-backend.aws_s3_bucket.state[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "state" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "dev-brmapp-brm7-tf-state"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "cloud_provider"  = "aws"
          [32m+[0m[0m "confidentiality" = "internal"
          [32m+[0m[0m "create_by"       = "Terraform"
          [32m+[0m[0m "environment"     = "dev"
          [32m+[0m[0m "owner"           = "Mayvue Solutions"
          [32m+[0m[0m "project"         = "brmapp"
          [32m+[0m[0m "team"            = "DevOps"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3-backend.aws_s3_bucket_replication_configuration.state[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_replication_configuration" "state" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m role   = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "StateReplicationAll"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m destination {
              [32m+[0m[0m bucket        = (known after apply)
              [32m+[0m[0m storage_class = "STANDARD"
            }
        }
    }

[1m  # module.s3-backend.aws_s3_bucket_versioning.backup[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "backup" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.s3-backend.aws_s3_bucket_versioning.main[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "main" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
