# Run this script as Administrator

$ErrorActionPreference = "Stop"

# Temporary directory for installer downloads
$tempDir = "$([Environment]::GetFolderPath('MyDocuments'))\BrM7Setup"
New-Item -Path $tempDir -ItemType Directory -Force | Out-Null

# Function to download installers with error handling
Function Download-Installer {
    param (
        [string]$Url,
        [string]$OutputPath
    )
    try {
        Invoke-WebRequest -Uri $Url -OutFile $OutputPath -UseBasicParsing
        return $true
    } catch {
        Write-Warning "❌ Download failed: $Url"
        Write-Warning $_.Exception.Message
        return $false
    }
}

# Function to install MSI
Function Install-MSI {
    param (
        [string]$FilePath
    )
    try {
        if (Test-Path $FilePath) {
            Start-Process msiexec.exe -Wait -ArgumentList "/i `"$FilePath`" /qn"
            Write-Host "✅ Installed: $FilePath"
        } else {
            Write-Warning "⚠️ Installer not found: $FilePath"
        }
    } catch {
        Write-Warning "❌ Installation failed: $FilePath"
        Write-Warning $_.Exception.Message
    }
}

# Function to run EXE
Function Install-EXE {
    param (
        [string]$FilePath,
        [string]$Args
    )
    try {
        if (Test-Path $FilePath) {
            Start-Process -FilePath $FilePath -ArgumentList $Args -Wait
            Write-Host "✅ Installed: $FilePath"
        } else {
            Write-Warning "⚠️ Installer not found: $FilePath"
        }
    } catch {
        Write-Warning "❌ Installation failed: $FilePath"
        Write-Warning $_.Exception.Message
    }
}

# 1. SAP Crystal Reports Runtime
$crystalUrl = "https://origin-az.softwaredownloads.sap.com/public/file/0020000001649962022"
$crystalInstaller = "$tempDir\CRRuntime.msi"
if (Download-Installer -Url $crystalUrl -OutputPath $crystalInstaller) {
    Install-MSI -FilePath $crystalInstaller
}

# 2. SQL Server Native Client
$sqlNativeClientUrl = "https://download.microsoft.com/download/1/2/2/1229BD1E-3DA3-4607-BD26-399AF46A3C8C/sqlncli.msi"
$sqlInstaller = "$tempDir\sqlncli.msi"
if (Download-Installer -Url $sqlNativeClientUrl -OutputPath $sqlInstaller) {
    Install-MSI -FilePath $sqlInstaller
}

# 3. IIS URL Rewrite
$urlRewriteUrl = "https://download.microsoft.com/download/D/D/9/DD9E0992-4875-4E3F-B845-B31F60A336E1/rewrite_amd64_en-US.msi"
$urlRewriteInstaller = "$tempDir\rewrite.msi"
if (Download-Installer -Url $urlRewriteUrl -OutputPath $urlRewriteInstaller) {
    Install-MSI -FilePath $urlRewriteInstaller
}

# 4. ASP.NET Core Hosting Bundle
$aspNetCoreUrl = "https://download.visualstudio.microsoft.com/download/pr/26f6f74a-f82f-4846-893c-3ed8f6b54b9c/58e9cce3d4fd3ebaeaffd89a71d4d8f5/dotnet-hosting-8.0.10-win.exe"
$aspNetInstaller = "$tempDir\aspnet-hosting.exe"
if (Download-Installer -Url $aspNetCoreUrl -OutputPath $aspNetInstaller) {
    Install-EXE -FilePath $aspNetInstaller -Args "/install /quiet /norestart"
}

# Optional: Restart IIS
try {
    iisreset
} catch {
    Write-Warning "⚠️ Failed to restart IIS"
}

